{
	"info": {
		"_postman_id": "d65b16c6-ea88-4240-a5c6-7dac22081b86",
		"name": "v1-gulls-health-and-safety-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5746803"
	},
	"item": [
		{
			"name": "Hello World",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Message is \"Hello, world!\"', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql('Hello, world!');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Application as Visitor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_APP_ID\", pm.response.headers.get('Location').split('/').pop());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"onBehalf\": true,\r\n  \"onBehalfDetails\": {\r\n    \"name\": \"Test User 1\",\r\n    \"organisation\": \"Nature Scot\",\r\n    \"emailAddress\": \"john.moore@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"licenceHolderDetails\": {\r\n    \"name\": \"Test User 2\",\r\n    \"organisation\": \"Test Org\",\r\n    \"emailAddress\": \"paul.cox@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"postcode\": \"IV38NW\",\r\n  \"uprn\": 10092032547,\r\n   \"manualAddress\": {\r\n   \"addressLine1\": \"KATTEDAL FARM   AULDEARN\",\r\n   \"addressLine2\": \"WATERLOO - EASTERTON - INSHOCH\",\r\n   \"addressTown\": \"NAIRN\",\r\n   \"addressCounty\": \"HIGHLAND\"\r\n   },\r\n  \"sameAddressAsLicenceHolder\": false,\r\n  \"sitePostcode\": \"IV38NW\",\r\n  \"siteUprn\": 10092032547,\r\n  \"siteManualAddress\": {\r\n  \"addressLine1\": \" FORESTRY & LAND SCOTLAND  \",\r\n  \"addressLine2\": \"AUCHTERAW ROAD\",\r\n  \"addressTown\": \"FORT AUGUSTUS\",\r\n  \"addressCounty\": \"HIGHLAND\"\r\n  },\r\n  \"issueOnSite\": {\r\n    \"aggression\": true,\r\n    \"diveBombing\": false,\r\n    \"noise\": true,\r\n    \"droppings\": false,\r\n    \"nestingMaterial\": true,\r\n    \"atHeightAggression\": false,\r\n    \"other\": true\r\n  },\r\n  \"siteIssueDetails\": {\r\n    \"whenIssue\": \"13/03/2023\",\r\n    \"whoAffected\": \"Test Users\",\r\n    \"howAffected\": \"For test reasons\",\r\n    \"otherIssueInformation\": \"Test other information\"\r\n  },\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": \"upTo1000\",\r\n        \"eggDestruction\": false,\r\n        \"chicksToRescueCentre\": false,\r\n        \"chicksRelocateNearby\": false,\r\n        \"killChicks\": false,\r\n        \"killAdults\": true,\r\n        \"quantityAdultsToKill\": 99999\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsWhereEggsDestroyed\": \"upTo10\",\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 3,\r\n        \"chicksRelocateNearby\": true,\r\n        \"quantityChicksToRelocate\": 33\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    }\r\n  },\r\n  \"measuresTried\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n  },\r\n  \"measuresIntendToTry\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": true,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n  },\r\n  \"measuresTriedMoreDetail\": \"Test measures tried more detail\",\r\n  \"measuresIntendNotToTry\": \"Test measures intend not to try more detail\",\r\n  \"isResidentialSite\": true,\r\n  \"residentialType\": \"wasteDisposal\",\r\n  \"previousLicence\": true,\r\n  \"previousLicenceNumber\": \"123456\",\r\n  \"supportingInformation\": \"Test supporting information\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Visitor's Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"GULLS_ACTIVITY_ID\", jsonData.PSpecies.PHerringGull.id);\r",
							"pm.collectionVariables.set(\"GULLS_CONTACT_ID\", jsonData.LicenceHolder.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke Licence before its a licence should return 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404 Not Found', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.have.status('Not Found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reason\": \"Nature Scot Reason\",\r\n    \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/revoke",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"revoke"
					]
				}
			},
			"response": []
		},
		{
			"name": "Accept an application on behalf of",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"confirmedByLicenseHolder\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a confirmed Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.have.property('confirmedByLicenseHolder');\r",
							"    pm.expect(jsonData).to.have.property('confirmedAt');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - pass test one",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testOneAssessment\": \"Test One Assessment\",\r\n    \"testOneDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a partial assessed application - pass test one",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('testOneAssessment');\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('testOneDecision');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - pass test two",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measuresToContinue\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n    },\r\n    \"additionalMeasuresIntendToTry\": {\r\n        \"preventNesting\": false,\r\n        \"removeOldNests\": false,\r\n        \"removeLitter\": false,\r\n        \"humanDisturbance\": true,\r\n        \"scaringDevices\": false,\r\n        \"hawking\": true,\r\n        \"disturbanceByDogs\": false\r\n    },\r\n    \"testTwoAssessment\": \"Test Two Assessment\",\r\n    \"testTwoDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a partial assessed application - pass test two",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('testTwoAssessment');\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('testTwoDecision');\r",
							"\r",
							"    pm.expect(jsonData.AssessmentMeasure).to.have.property('preventNesting').to.eql(\"Continue\");\r",
							"    pm.expect(jsonData.AssessmentMeasure).to.have.property('humanDisturbance').to.eql(\"Intend\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a permitted activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/permitted-activity/{{GULLS_ACTIVITY_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"permitted-activity",
						"{{GULLS_ACTIVITY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - change permitted activities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quantityNestsToRemove\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/permitted-activity/{{GULLS_ACTIVITY_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"permitted-activity",
						"{{GULLS_ACTIVITY_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a partial assessed application - check permitted activity change happened",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit additional species",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"speciesType\": \"commonGull\",\r\n      \"activities\": \r\n\t  {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": 100,\r\n        \"eggDestruction\": false,\r\n        \"quantityNestsWhereEggsDestroyed\": null,\r\n        \"chicksToRescueCentre\": false,\r\n        \"quantityChicksToRescue\": null,\r\n        \"chicksRelocateNearby\": false,\r\n        \"quantityChicksToRelocate\": null,\r\n        \"killChicks\": false,\r\n        \"quantityChicksToKill\": null,\r\n        \"killAdults\": false,\r\n        \"quantityAdultsToKill\": null\r\n\t  }\r\n\t}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/add-additional-species",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"add-additional-species"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get application with additional species",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.PSpecies.CommonGullId).not.equal(null);\r",
							"    pm.expect(jsonData.PSpecies.PCommonGull.removeNests).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - pass test three",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testThreeAssessment\": \"Test Three Assessment\",\r\n    \"testThreeDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a partial assessed application - pass test Three",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('testThreeAssessment');\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('testThreeDecision');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - pass decision",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"assessedBy\": \"989745\",\r\n    \"decision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a fully assessed application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('assessedBy');\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('decision');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Application Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"note\": \"This is a test note\",\r\n  \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/note",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get application with note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.have.property('ApplicationNotes');\r",
							"    pm.expect(jsonData.ApplicationNotes[0]).to.have.property('Note');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Resend new license emails before license is issued",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license/resend",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license",
						"resend"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Contact - when it is an application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"This is a test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/contact/{{GULLS_CONTACT_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"contact",
						"{{GULLS_CONTACT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get application with edited contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.have.property('LicenceHolder');\r",
							"    pm.expect(jsonData.LicenceHolder.name).to.equal('This is a test');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new License from an approved application as a staff member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"periodFrom\": \"2021-02-01T00:00:00.000Z\",\r\n  \"periodTo\": \"2022-03-01T23:59:59.000Z\",\r\n  \"advisories\": [1],\r\n  \"conditions\": [4,6],\r\n  \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Contact - when it is a Licence",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"This is a test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/contact/{{GULLS_CONTACT_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"contact",
						"{{GULLS_CONTACT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Visitor's Application That is now a License",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.License).to.have.property('periodFrom');\r",
							"    pm.expect(jsonData.License).to.have.property('periodTo');\r",
							"\r",
							"    pm.expect(jsonData.License.LicenseAdvisories[0]).to.have.property('AdvisoryId');\r",
							"    pm.expect(jsonData.License.LicenseAdvisories[0]).to.have.property('Advisory');\r",
							"    pm.expect(jsonData.License.LicenseAdvisories[0].Advisory).to.have.property('advisory');\r",
							"    \r",
							"    pm.expect(jsonData.License.LicenseConditions[0]).to.have.property('ConditionId');\r",
							"    pm.expect(jsonData.License.LicenseConditions[0]).to.have.property('Condition');\r",
							"    pm.expect(jsonData.License.LicenseConditions[0].Condition).to.have.property('condition');\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Resend new license emails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license/resend",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license",
						"resend"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw Application should fail as its now a licence",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reason\": \"Nature Scot Reason\",\r\n    \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke Licence",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reason\": \"Nature Scot Reason\",\r\n    \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/revoke",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"revoke"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Application as Visitor to refuse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_APP_ID\", pm.response.headers.get('Location').split('/').pop());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"onBehalf\": true,\r\n  \"onBehalfDetails\": {\r\n    \"name\": \"Test User 1\",\r\n    \"organisation\": \"Nature Scot\",\r\n    \"emailAddress\": \"john.moore@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"licenceHolderDetails\": {\r\n    \"name\": \"Test User 2\",\r\n    \"organisation\": \"Test Org\",\r\n    \"emailAddress\": \"paul.cox@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"postcode\": \"IV38NW\",\r\n  \"uprn\": 10092032547,\r\n   \"manualAddress\": {\r\n   \"addressLine1\": \"KATTEDAL FARM   AULDEARN\",\r\n   \"addressLine2\": \"WATERLOO - EASTERTON - INSHOCH\",\r\n   \"addressTown\": \"NAIRN\",\r\n   \"addressCounty\": \"HIGHLAND\"\r\n   },\r\n  \"sameAddressAsLicenceHolder\": false,\r\n  \"sitePostcode\": \"IV38NW\",\r\n  \"siteUprn\": 10092032547,\r\n  \"siteManualAddress\": {\r\n  \"addressLine1\": \" FORESTRY & LAND SCOTLAND  \",\r\n  \"addressLine2\": \"AUCHTERAW ROAD\",\r\n  \"addressTown\": \"FORT AUGUSTUS\",\r\n  \"addressCounty\": \"HIGHLAND\"\r\n  },\r\n  \"issueOnSite\": {\r\n    \"aggression\": true,\r\n    \"diveBombing\": false,\r\n    \"noise\": true,\r\n    \"droppings\": false,\r\n    \"nestingMaterial\": true,\r\n    \"atHeightAggression\": false,\r\n    \"other\": true\r\n  },\r\n  \"siteIssueDetails\": {\r\n    \"whenIssue\": \"13/03/2023\",\r\n    \"whoAffected\": \"Test Users\",\r\n    \"howAffected\": \"For test reasons\",\r\n    \"otherIssueInformation\": \"Test other information\"\r\n  },\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": \"upTo1000\",\r\n        \"eggDestruction\": false,\r\n        \"chicksToRescueCentre\": false,\r\n        \"chicksRelocateNearby\": false,\r\n        \"killChicks\": false,\r\n        \"killAdults\": true,\r\n        \"quantityAdultsToKill\": 99999\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsWhereEggsDestroyed\": \"upTo10\",\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 3,\r\n        \"chicksRelocateNearby\": true,\r\n        \"quantityChicksToRelocate\": 33\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    }\r\n  },\r\n  \"measuresTried\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n  },\r\n  \"measuresIntendToTry\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": true,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n  },\r\n  \"measuresTriedMoreDetail\": \"Test measures tried more detail\",\r\n  \"measuresIntendNotToTry\": \"Test measures intend not to try more detail\",\r\n  \"isResidentialSite\": true,\r\n  \"residentialType\": \"wasteDisposal\",\r\n  \"previousLicence\": true,\r\n  \"previousLicenceNumber\": \"123456\",\r\n  \"supportingInformation\": \"Test supporting information\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new License before LH approval as a staff member - should fail as not approved",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"periodFrom\": \"2021-02-01T00:00:00.000Z\",\r\n  \"periodTo\": \"2022-03-01T23:59:59.000Z\",\r\n  \"advisories\": [1],\r\n  \"conditions\": [4,6],\r\n  \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license"
					]
				}
			},
			"response": []
		},
		{
			"name": "Accept an application on behalf of to refuse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"confirmedByLicenseHolder\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign the application to a staff member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"staffNumber\": \"9394699\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assign",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assign"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a confirmed and assigned Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.have.property('confirmedByLicenseHolder');\r",
							"    pm.expect(jsonData).to.have.property('staffNumber');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Unassign the application from the staff member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"staffNumber\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assign",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assign"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a unassigned Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new License before assessment as a staff member - should fail as not assessed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"periodFrom\": \"2021-02-01T00:00:00.000Z\",\r\n  \"periodTo\": \"2022-03-01T23:59:59.000Z\",\r\n  \"advisories\": [1],\r\n  \"conditions\": [4,6],\r\n  \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - pass test one",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testOneAssessment\": \"Test One Assessment\",\r\n    \"testOneDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - fail test two",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measuresToContinue\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n    },\r\n    \"additionalMeasuresIntendToTry\": {\r\n        \"preventNesting\": false,\r\n        \"removeOldNests\": false,\r\n        \"removeLitter\": false,\r\n        \"humanDisturbance\": false,\r\n        \"scaringDevices\": false,\r\n        \"hawking\": false,\r\n        \"disturbanceByDogs\": false\r\n    },\r\n    \"testTwoAssessment\": \"Test Two Assessment\",\r\n    \"testTwoDecision\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - pass test three",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testThreeAssessment\": \"Test Three Assessment\",\r\n    \"testThreeDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new License before decision as a staff member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"periodFrom\": \"2021-02-01T00:00:00.000Z\",\r\n  \"periodTo\": \"2022-03-01T23:59:59.000Z\",\r\n  \"advisories\": [1],\r\n  \"conditions\": [4,6],\r\n  \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assess an application - refuse application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"assessedBy\": \"989745\",\r\n    \"refusalReason\": \"This is a test\",\r\n    \"decision\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a refused Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object matches posted object', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('assessedBy');\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('refusalReason');\r",
							"    pm.expect(jsonData.ApplicationAssessment).to.have.property('decision');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new License from a refused application as a staff member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"periodFrom\": \"2021-02-01T00:00:00.000Z\",\r\n  \"periodTo\": \"2022-03-01T23:59:59.000Z\",\r\n  \"advisories\": [1],\r\n  \"conditions\": [4,6],\r\n  \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}/license",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}",
						"license"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Application as Visitor to withdraw",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_APP_ID\", pm.response.headers.get('Location').split('/').pop());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"onBehalf\": true,\r\n  \"onBehalfDetails\": {\r\n    \"name\": \"Test User 1\",\r\n    \"organisation\": \"Nature Scot\",\r\n    \"emailAddress\": \"john.moore@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"licenceHolderDetails\": {\r\n    \"name\": \"Test User 2\",\r\n    \"organisation\": \"Test Org\",\r\n    \"emailAddress\": \"paul.cox@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"postcode\": \"IV38NW\",\r\n  \"uprn\": 10092032547,\r\n   \"manualAddress\": {\r\n   \"addressLine1\": \"KATTEDAL FARM   AULDEARN\",\r\n   \"addressLine2\": \"WATERLOO - EASTERTON - INSHOCH\",\r\n   \"addressTown\": \"NAIRN\",\r\n   \"addressCounty\": \"HIGHLAND\"\r\n   },\r\n  \"sameAddressAsLicenceHolder\": false,\r\n  \"sitePostcode\": \"IV38NW\",\r\n  \"siteUprn\": 10092032547,\r\n  \"siteManualAddress\": {\r\n  \"addressLine1\": \" FORESTRY & LAND SCOTLAND  \",\r\n  \"addressLine2\": \"AUCHTERAW ROAD\",\r\n  \"addressTown\": \"FORT AUGUSTUS\",\r\n  \"addressCounty\": \"HIGHLAND\"\r\n  },\r\n  \"issueOnSite\": {\r\n    \"aggression\": true,\r\n    \"diveBombing\": false,\r\n    \"noise\": true,\r\n    \"droppings\": false,\r\n    \"nestingMaterial\": true,\r\n    \"atHeightAggression\": false,\r\n    \"other\": true\r\n  },\r\n  \"siteIssueDetails\": {\r\n    \"whenIssue\": \"13/03/2023\",\r\n    \"whoAffected\": \"Test Users\",\r\n    \"howAffected\": \"For test reasons\",\r\n    \"otherIssueInformation\": \"Test other information\"\r\n  },\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": \"upTo1000\",\r\n        \"eggDestruction\": false,\r\n        \"chicksToRescueCentre\": false,\r\n        \"chicksRelocateNearby\": false,\r\n        \"killChicks\": false,\r\n        \"killAdults\": true,\r\n        \"quantityAdultsToKill\": 99999\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsWhereEggsDestroyed\": \"upTo10\",\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 3,\r\n        \"chicksRelocateNearby\": true,\r\n        \"quantityChicksToRelocate\": 33\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    }\r\n  },\r\n  \"measuresTried\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n  },\r\n  \"measuresIntendToTry\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": true,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n  },\r\n  \"measuresTriedMoreDetail\": \"Test measures tried more detail\",\r\n  \"measuresIntendNotToTry\": \"Test measures intend not to try more detail\",\r\n  \"isResidentialSite\": true,\r\n  \"residentialType\": \"wasteDisposal\",\r\n  \"previousLicence\": true,\r\n  \"previousLicenceNumber\": \"123456\",\r\n  \"supportingInformation\": \"Test supporting information\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reason\": \"Nature Scot Reason\",\r\n    \"createdBy\": \"989745\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All conditions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/conditions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"conditions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All advisories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/advisories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"advisories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Default conditions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/default-conditions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"default-conditions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Optional conditions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/optional-conditions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"optional-conditions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All default advisories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/default-advisories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"default-advisories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All optional advisories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/optional-advisories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"optional-advisories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get the public JWK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							"pm.test('Returned object looks like a public EC JWK', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.have.property('kty');\r",
							"    pm.expect(jsonData.kty).to.equal('EC')\r",
							"    pm.expect(jsonData).to.have.property('crv');\r",
							"    pm.expect(jsonData.crv).to.equal('P-256')\r",
							"    pm.expect(jsonData).to.have.property('x');\r",
							"    pm.expect(jsonData).to.have.property('y');\r",
							"    pm.expect(jsonData).to.not.have.property('d');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/public-key",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"public-key"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new application to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_APP_ID_RETURNS\", pm.response.headers.get('Location').split('/').pop());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"onBehalf\": true,\r\n  \"onBehalfDetails\": {\r\n    \"name\": \"Test User 1\",\r\n    \"organisation\": \"Nature Scot\",\r\n    \"emailAddress\": \"john.moore@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"licenceHolderDetails\": {\r\n    \"name\": \"Test User 2\",\r\n    \"organisation\": \"Test Org\",\r\n    \"emailAddress\": \"paul.cox@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"postcode\": \"IV38NW\",\r\n  \"uprn\": 10092032547,\r\n   \"manualAddress\": {\r\n   \"addressLine1\": \"KATTEDAL FARM   AULDEARN\",\r\n   \"addressLine2\": \"WATERLOO - EASTERTON - INSHOCH\",\r\n   \"addressTown\": \"NAIRN\",\r\n   \"addressCounty\": \"HIGHLAND\"\r\n   },\r\n  \"sameAddressAsLicenceHolder\": false,\r\n  \"sitePostcode\": \"IV38NW\",\r\n  \"siteUprn\": 10092032547,\r\n  \"siteManualAddress\": {\r\n  \"addressLine1\": \" FORESTRY & LAND SCOTLAND  \",\r\n  \"addressLine2\": \"AUCHTERAW ROAD\",\r\n  \"addressTown\": \"FORT AUGUSTUS\",\r\n  \"addressCounty\": \"HIGHLAND\"\r\n  },\r\n  \"issueOnSite\": {\r\n    \"aggression\": true,\r\n    \"diveBombing\": false,\r\n    \"noise\": true,\r\n    \"droppings\": false,\r\n    \"nestingMaterial\": true,\r\n    \"atHeightAggression\": false,\r\n    \"other\": true\r\n  },\r\n  \"siteIssueDetails\": {\r\n    \"whenIssue\": \"13/03/2023\",\r\n    \"whoAffected\": \"Test Users\",\r\n    \"howAffected\": \"For test reasons\",\r\n    \"otherIssueInformation\": \"Test other information\"\r\n  },\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": \"upTo1000\",\r\n        \"eggDestruction\": false,\r\n        \"chicksToRescueCentre\": false,\r\n        \"chicksRelocateNearby\": false,\r\n        \"killChicks\": false,\r\n        \"killAdults\": true,\r\n        \"quantityAdultsToKill\": 99999\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsWhereEggsDestroyed\": \"upTo10\",\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 3,\r\n        \"chicksRelocateNearby\": true,\r\n        \"quantityChicksToRelocate\": 33\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    }\r\n  },\r\n  \"measuresTried\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n  },\r\n  \"measuresIntendToTry\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": true,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n  },\r\n  \"measuresTriedMoreDetail\": \"Test measures tried more detail\",\r\n  \"measuresIntendNotToTry\": \"Test measures intend not to try more detail\",\r\n  \"isResidentialSite\": true,\r\n  \"residentialType\": \"wasteDisposal\",\r\n  \"previousLicence\": true,\r\n  \"previousLicenceNumber\": \"123456\",\r\n  \"supportingInformation\": \"Test supporting information\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirm application to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"confirmedByLicenseHolder\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit return on application should fail if not licence",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400 Bad Request', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.status('Bad Request');\r",
							"});\r",
							"\r",
							"pm.test('Returns correct error message', function () {\r",
							"    // Get the response as JSON.\r",
							"    var resJsonData = pm.response.json();\r",
							"\r",
							"    // Check the error message is correct.\r",
							"    pm.expect(resJsonData.message).to.include('has not been issued yet');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"confirmDeclaration\": true,\r\n  \"licenceNumber\": {{GULLS_NEW_APP_ID_RETURNS}},\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-23T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 123,\r\n        \"quantityNestsRemoved\": 33,\r\n        \"dateEggsDestroyed\": \"2021-04-24T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 33,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-25T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 66,\r\n        \"quantityNestsRemoved\": 39,\r\n        \"dateEggsDestroyed\": \"2021-04-26T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 13,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-27T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 44,\r\n        \"quantityNestsRemoved\": 3,\r\n        \"dateEggsDestroyed\": \"2021-04-28T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 39,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true\r\n      }\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-29T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 1234,\r\n        \"quantityNestsRemoved\": 333,\r\n        \"dateEggsDestroyed\": \"2021-04-30T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 333,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true\r\n      }\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2022-03-23T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 10,\r\n        \"quantityNestsRemoved\": 3,\r\n        \"dateEggsDestroyed\": \"2022-03-23T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 9,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true\r\n      }\r\n    }\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/return",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"return"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pass test 1 to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testOneAssessment\": \"Test One Assessment\",\r\n    \"testOneDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pass test 2 to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testTwoAssessment\": \"Test Two Assessment\",\r\n    \"testTwoDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pass test 3 to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"testThreeAssessment\": \"Test Three Assessment\",\r\n    \"testThreeDecision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pass decision to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"assessedBy\": \"9394699\",\r\n    \"decision\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/assessment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new licence to test returns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"periodFrom\": \"2021-02-01T00:00:00.000Z\",\r\n  \"periodTo\": \"2022-03-01T23:59:59.000Z\",\r\n  \"advisories\": [1],\r\n  \"conditions\": [4,6],\r\n  \"createdBy\": \"9394699\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/license",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"license"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit valid return",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_RETURN_ID\", pm.response.headers.get('Location').split('/').pop());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"confirmDeclaration\": true,\r\n  \"name\": \"Test User\",\r\n  \"isReportingReturn\": true,\r\n  \"licenceNumber\": {{GULLS_NEW_APP_ID_RETURNS}},\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-23T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 123,\r\n        \"quantityNestsRemoved\": 33,\r\n        \"dateEggsDestroyed\": \"2021-04-24T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 33,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsAffected\": 129,\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 33,\r\n        \"wildlifeCentre\": \"Test Wildlife Centre\",\r\n        \"dateChicksToRescue\": \"2021-04-24T18:25:43.511Z\",\r\n        \"chicksRelocatedNearby\": true,\r\n        \"quantityChicksRelocated\": 34,\r\n        \"dateChicksRelocated\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killChicks\": true,\r\n        \"quantityChicksKilled\": 35,\r\n        \"dateChicksKilled\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killAdults\": true,\r\n        \"quantityAdultsKilled\": 36,\r\n        \"dateAdultsKilled\": \"2021-04-24T18:25:43.511Z\"\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"hasReturn\": false,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": null,\r\n        \"quantityEggsRemoved\": null,\r\n        \"quantityNestsRemoved\": null,\r\n        \"dateEggsDestroyed\": null,\r\n        \"quantityEggsDestroyed\": null,\r\n        \"removeNests\": null,\r\n        \"eggDestruction\": null\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-27T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 44,\r\n        \"quantityNestsRemoved\": 3,\r\n        \"dateEggsDestroyed\": \"2021-04-28T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 39,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsAffected\": 129,\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 33,\r\n        \"wildlifeCentre\": \"Test Wildlife Centre\",\r\n        \"dateChicksToRescue\": \"2021-04-24T18:25:43.511Z\",\r\n        \"chicksRelocatedNearby\": true,\r\n        \"quantityChicksRelocated\": 34,\r\n        \"dateChicksRelocated\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killChicks\": true,\r\n        \"quantityChicksKilled\": 35,\r\n        \"dateChicksKilled\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killAdults\": true,\r\n        \"quantityAdultsKilled\": 36,\r\n        \"dateAdultsKilled\": \"2021-04-24T18:25:43.511Z\"\r\n      }\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2021-04-29T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 1234,\r\n        \"quantityNestsRemoved\": 333,\r\n        \"dateEggsDestroyed\": \"2021-04-30T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 333,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsAffected\": 129,\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 33,\r\n        \"wildlifeCentre\": \"Test Wildlife Centre\",\r\n        \"dateChicksToRescue\": \"2021-04-24T18:25:43.511Z\",\r\n        \"chicksRelocatedNearby\": true,\r\n        \"quantityChicksRelocated\": 34,\r\n        \"dateChicksRelocated\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killChicks\": true,\r\n        \"quantityChicksKilled\": 35,\r\n        \"dateChicksKilled\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killAdults\": true,\r\n        \"quantityAdultsKilled\": 36,\r\n        \"dateAdultsKilled\": \"2021-04-24T18:25:43.511Z\"\r\n      }\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"hasReturn\": true,\r\n      \"activities\": {\r\n        \"dateNestsEggsRemoved\": \"2022-03-23T18:25:43.511Z\",\r\n        \"quantityEggsRemoved\": 10,\r\n        \"quantityNestsRemoved\": 3,\r\n        \"dateEggsDestroyed\": \"2022-03-23T18:25:43.511Z\",\r\n        \"quantityEggsDestroyed\": 9,\r\n        \"removeNests\": true,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsAffected\": 129,\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 33,\r\n        \"wildlifeCentre\": \"Test Wildlife Centre\",\r\n        \"dateChicksToRescue\": \"2021-04-24T18:25:43.511Z\",\r\n        \"chicksRelocatedNearby\": true,\r\n        \"quantityChicksRelocated\": 34,\r\n        \"dateChicksRelocated\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killChicks\": true,\r\n        \"quantityChicksKilled\": 35,\r\n        \"dateChicksKilled\": \"2021-04-24T18:25:43.511Z\",\r\n        \"killAdults\": true,\r\n        \"quantityAdultsKilled\": 36,\r\n        \"dateAdultsKilled\": \"2021-04-24T18:25:43.511Z\"\r\n      }\r\n    }\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/return",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"return"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get new return",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/return/{{GULLS_NEW_RETURN_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"return",
						"{{GULLS_NEW_RETURN_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit valid site visit return",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_RETURN_ID\", pm.response.headers.get('Location').split('/').pop());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"confirmDeclaration\": true,\r\n  \"name\": \"Test User\",\r\n  \"isSiteVisitReturn\": true,\r\n  \"siteVisitDate\": \"2022-03-01T23:59:59.000Z\",\r\n  \"licenceNumber\": {{GULLS_NEW_APP_ID_RETURNS}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/return",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"return"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit valid final return",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_RETURN_ID\", pm.response.headers.get('Location').split('/').pop());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"confirmDeclaration\": true,\r\n  \"name\": \"Test User\",\r\n  \"isFinalReturn\": true,\r\n  \"hasTriedPreventativeMeasures\": true,\r\n  \"preventativeMeasuresDetails\": \"Test data\",\r\n  \"wasCompliant\": true,\r\n  \"complianceDetails\": \"Test data\",\r\n  \"licenceNumber\": {{GULLS_NEW_APP_ID_RETURNS}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/return",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"return"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit amendment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"GULLS_NEW_AMEND_ID\", pm.response.headers.get('Location').split('/').pop());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amendReason\": \"This is a test note.\",\r\n  \"amendSpecies\": {\r\n    \"herringGull\": {\r\n      \"hasAmend\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": 200,\r\n        \"eggDestruction\": false,\r\n        \"quantityNestsWhereEggsDestroyed\": null,\r\n        \"chicksToRescueCentre\": false,\r\n        \"quantityChicksToRescue\": null,\r\n        \"chicksRelocateNearby\": false,\r\n        \"quantityChicksToRelocate\": null,\r\n        \"killChicks\": false,\r\n        \"quantityChicksToKill\": null,\r\n        \"killAdults\": false,\r\n        \"quantityAdultsToKill\": null\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"hasAmend\": false,\r\n      \"activities\": null\r\n    },\r\n    \"commonGull\": {\r\n      \"hasAmend\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"quantityNestsToRemove\": null,\r\n        \"eggDestruction\": false,\r\n        \"quantityNestsWhereEggsDestroyed\": null,\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 33,\r\n        \"chicksRelocateNearby\": false,\r\n        \"quantityChicksToRelocate\": null,\r\n        \"killChicks\": false,\r\n        \"quantityChicksToKill\": null,\r\n        \"killAdults\": false,\r\n        \"quantityAdultsToKill\": null\r\n      }\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"hasAmend\": false,\r\n      \"activities\": null\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"hasAmend\": false,\r\n      \"activities\": null\r\n    }\r\n  },\r\n  \"whatYouMustDo\": [\r\n    4,\r\n    6\r\n  ],\r\n  \"general\": [\r\n    12,\r\n    13\r\n  ],\r\n  \"advisoryNotes\": [\r\n    2,\r\n    7\r\n  ],\r\n  \"reporting\": [\r\n    19,\r\n    20\r\n  ],\r\n  \"assessment\": \"This is a test assessment.\",\r\n  \"amendedBy\": 9394699\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/amendment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"amendment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get new amendment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/amendment/{{GULLS_NEW_AMEND_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"amendment",
						"{{GULLS_NEW_AMEND_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Resend amendment emails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{GULLS_NEW_APP_ID_RETURNS}}/amendment/{{GULLS_NEW_AMEND_ID}}/resend",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{GULLS_NEW_APP_ID_RETURNS}}",
						"amendment",
						"{{GULLS_NEW_AMEND_ID}}",
						"resend"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new application with same site address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"ID_SAME_ADDRESS\", pm.response.headers.get('Location').split('/').pop());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"onBehalf\": true,\r\n  \"onBehalfDetails\": {\r\n    \"name\": \"Test User 1\",\r\n    \"organisation\": \"Nature Scot\",\r\n    \"emailAddress\": \"john.moore@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"licenceHolderDetails\": {\r\n    \"name\": \"Test User 2\",\r\n    \"organisation\": \"Test Org\",\r\n    \"emailAddress\": \"paul.cox@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"postcode\": \"IV38NW\",\r\n  \"uprn\": 10092032547,\r\n   \"manualAddress\": {\r\n   \"addressLine1\": \"KATTEDAL FARM   AULDEARN\",\r\n   \"addressLine2\": \"WATERLOO - EASTERTON - INSHOCH\",\r\n   \"addressTown\": \"NAIRN\",\r\n   \"addressCounty\": \"HIGHLAND\"\r\n   },\r\n  \"sameAddressAsLicenceHolder\": true,\r\n  \"issueOnSite\": {\r\n    \"aggression\": true,\r\n    \"diveBombing\": false,\r\n    \"noise\": true,\r\n    \"droppings\": false,\r\n    \"nestingMaterial\": true,\r\n    \"atHeightAggression\": false,\r\n    \"other\": true\r\n  },\r\n  \"siteIssueDetails\": {\r\n    \"whenIssue\": \"13/03/2023\",\r\n    \"whoAffected\": \"Test Users\",\r\n    \"howAffected\": \"For test reasons\",\r\n    \"otherIssueInformation\": \"Test other information\"\r\n  },\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": \"upTo1000\",\r\n        \"eggDestruction\": false,\r\n        \"chicksToRescueCentre\": false,\r\n        \"chicksRelocateNearby\": false,\r\n        \"killChicks\": false,\r\n        \"killAdults\": true,\r\n        \"quantityAdultsToKill\": 99999\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsWhereEggsDestroyed\": \"upTo10\",\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 3,\r\n        \"chicksRelocateNearby\": true,\r\n        \"quantityChicksToRelocate\": 33\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    }\r\n  },\r\n  \"measuresTried\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n  },\r\n  \"measuresIntendToTry\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": true,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n  },\r\n  \"measuresTriedMoreDetail\": \"Test measures tried more detail\",\r\n  \"measuresIntendNotToTry\": \"Test measures intend not to try more detail\",\r\n  \"isResidentialSite\": true,\r\n  \"residentialType\": \"wasteDisposal\",\r\n  \"previousLicence\": true,\r\n  \"previousLicenceNumber\": \"123456\",\r\n  \"supportingInformation\": \"Test supporting information\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new application with different site address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							"\r",
							"pm.test('Location is present', function () {\r",
							"    pm.response.to.have.header('Location');\r",
							"    \r",
							"    pm.expect(pm.response.headers.get('Location')).to.include(\r",
							"        `http://localhost:3017/gulls-health-and-safety-api/v1/application/`\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"ID_DIFFERENT_ADDRESS\", pm.response.headers.get('Location').split('/').pop());\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"ADDRESS_ID_DIFFERENT_ADDRESS\", jsonData.LicenceHolderAddressId);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"onBehalf\": true,\r\n  \"onBehalfDetails\": {\r\n    \"name\": \"Test User 1\",\r\n    \"organisation\": \"Nature Scot\",\r\n    \"emailAddress\": \"john.moore@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"licenceHolderDetails\": {\r\n    \"name\": \"Test User 2\",\r\n    \"organisation\": \"Test Org\",\r\n    \"emailAddress\": \"paul.cox@nature.scot\",\r\n    \"phoneNumber\": \"01234567890\"\r\n  },\r\n  \"postcode\": \"IV38NW\",\r\n  \"uprn\": 10092032547,\r\n   \"manualAddress\": {\r\n   \"addressLine1\": \"KATTEDAL FARM   AULDEARN\",\r\n   \"addressLine2\": \"WATERLOO - EASTERTON - INSHOCH\",\r\n   \"addressTown\": \"NAIRN\",\r\n   \"addressCounty\": \"HIGHLAND\"\r\n   },\r\n  \"sameAddressAsLicenceHolder\": false,\r\n  \"sitePostcode\": \"IV38NW\",\r\n  \"siteUprn\": 10092032547,\r\n  \"siteManualAddress\": {\r\n  \"addressLine1\": \" FORESTRY & LAND SCOTLAND  \",\r\n  \"addressLine2\": \"AUCHTERAW ROAD\",\r\n  \"addressTown\": \"FORT AUGUSTUS\",\r\n  \"addressCounty\": \"HIGHLAND\"\r\n  },\r\n  \"issueOnSite\": {\r\n    \"aggression\": true,\r\n    \"diveBombing\": false,\r\n    \"noise\": true,\r\n    \"droppings\": false,\r\n    \"nestingMaterial\": true,\r\n    \"atHeightAggression\": false,\r\n    \"other\": true\r\n  },\r\n  \"siteIssueDetails\": {\r\n    \"whenIssue\": \"13/03/2023\",\r\n    \"whoAffected\": \"Test Users\",\r\n    \"howAffected\": \"For test reasons\",\r\n    \"otherIssueInformation\": \"Test other information\"\r\n  },\r\n  \"species\": {\r\n    \"herringGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": true,\r\n        \"quantityNestsToRemove\": \"upTo1000\",\r\n        \"eggDestruction\": false,\r\n        \"chicksToRescueCentre\": false,\r\n        \"chicksRelocateNearby\": false,\r\n        \"killChicks\": false,\r\n        \"killAdults\": true,\r\n        \"quantityAdultsToKill\": 99999\r\n      }\r\n    },\r\n    \"blackHeadedGull\": {\r\n      \"requiresLicense\": true,\r\n      \"activities\": {\r\n        \"removeNests\": false,\r\n        \"eggDestruction\": true,\r\n        \"quantityNestsWhereEggsDestroyed\": \"upTo10\",\r\n        \"chicksToRescueCentre\": true,\r\n        \"quantityChicksToRescue\": 3,\r\n        \"chicksRelocateNearby\": true,\r\n        \"quantityChicksToRelocate\": 33\r\n      }\r\n    },\r\n    \"commonGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"greatBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    },\r\n    \"lesserBlackBackedGull\": {\r\n      \"requiresLicense\": false,\r\n      \"activities\": {}\r\n    }\r\n  },\r\n  \"measuresTried\": {\r\n    \"preventNesting\": true,\r\n    \"removeOldNests\": false,\r\n    \"removeLitter\": true,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": true,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": true\r\n  },\r\n  \"measuresIntendToTry\": {\r\n    \"preventNesting\": false,\r\n    \"removeOldNests\": true,\r\n    \"removeLitter\": false,\r\n    \"humanDisturbance\": false,\r\n    \"scaringDevices\": false,\r\n    \"hawking\": false,\r\n    \"disturbanceByDogs\": false\r\n  },\r\n  \"measuresTriedMoreDetail\": \"Test measures tried more detail\",\r\n  \"measuresIntendNotToTry\": \"Test measures intend not to try more detail\",\r\n  \"isResidentialSite\": true,\r\n  \"residentialType\": \"wasteDisposal\",\r\n  \"previousLicence\": true,\r\n  \"previousLicenceNumber\": \"123456\",\r\n  \"supportingInformation\": \"Test supporting information\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new licence holder address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status('Created');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"addressLine1\": \"Test edit address 1\",\r\n    \"addressLine2\": \"Test edit address 2\",\r\n    \"addressTown\": \"Test edit address Town\",\r\n    \"addressCounty\": \"Test edit address County\",\r\n    \"postcode\": \"AB123CD\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{ID_SAME_ADDRESS}}/address",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{ID_SAME_ADDRESS}}",
						"address"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update existing licence holder address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 OK', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status('OK');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"addressLine1\": \"Test edit address 1\",\r\n    \"addressLine2\": \"Test edit address 2\",\r\n    \"addressTown\": \"Test edit address Town\",\r\n    \"addressCounty\": \"Test edit address County\",\r\n    \"postcode\": \"AB123CD\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3017/gulls-health-and-safety-api/v1/application/{{ID_DIFFERENT_ADDRESS}}/address/{{ADDRESS_ID_DIFFERENT_ADDRESS}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3017",
					"path": [
						"gulls-health-and-safety-api",
						"v1",
						"application",
						"{{ID_DIFFERENT_ADDRESS}}",
						"address",
						"{{ADDRESS_ID_DIFFERENT_ADDRESS}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "GULLS_NEW_APP_ID",
			"value": "0"
		},
		{
			"key": "GULLS_CONTACT_ID",
			"value": ""
		},
		{
			"key": "GULLS_NEW_APP_ID_RETURNS",
			"value": "0"
		},
		{
			"key": "GULLS_ACTIVITY_ID",
			"value": ""
		},
		{
			"key": "GULLS_NEW_RETURN_ID",
			"value": ""
		},
		{
			"key": "GULLS_NEW_AMEND_ID",
			"value": ""
		},
		{
			"key": "ID_SAME_ADDRESS",
			"value": ""
		},
		{
			"key": "ID_DIFFERENT_ADDRESS",
			"value": ""
		},
		{
			"key": "ADDRESS_ID_DIFFERENT_ADDRESS",
			"value": ""
		}
	]
}